<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0515.0324                               -->
<workbook original-version='18.1' source-build='2024.1.3 (20241.24.0515.0324)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau_Total_Table)' inline='true' name='federated.1d75m9w13x97xm1g61rdm1m9xom1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_Total_Table' name='excel-direct.036dght1exg6q210rttz41bg5wut'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Vraj_/Downloads/Tableau_Total_Table.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.036dght1exg6q210rttz41bg5wut' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='death_percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.036dght1exg6q210rttz41bg5wut' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='death_percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F093D15E92F941F39733F3AC946474D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F093D15E92F941F39733F3AC946474D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[death_percentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>death_percentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F093D15E92F941F39733F3AC946474D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_F093D15E92F941F39733F3AC946474D5]' role='measure' type='quantitative' />
      <column caption='Death Percentage' datatype='real' name='[death_percentage]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Vraj_/AppData/Local/Temp/TableauTemp/#TableauTemp_16p9mz51rbxr2x19hy3zx0n18noc.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/11/2024 05:06:12 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F093D15E92F941F39733F3AC946474D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F093D15E92F941F39733F3AC946474D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>death_percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[death_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>death_percentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F093D15E92F941F39733F3AC946474D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_F093D15E92F941F39733F3AC946474D5'>
            <properties context=''>
              <relation connection='excel-direct.036dght1exg6q210rttz41bg5wut' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='death_percentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau_TotalDeath_Continent)' inline='true' name='federated.0rg3pqy08l6yp51bo2mja1t13qid' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_TotalDeath_Continent' name='excel-direct.1x545481tu84wm1csu91z1q0lk15'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Vraj_/Downloads/Tableau_TotalDeath_Continent.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1x545481tu84wm1csu91z1q0lk15' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='total_death_count' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1x545481tu84wm1csu91z1q0lk15' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='total_death_count' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8A901CADB0AC4413B19D98EF4B794BC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_death_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_death_count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_death_count</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8A901CADB0AC4413B19D98EF4B794BC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_8A901CADB0AC4413B19D98EF4B794BC2]' role='measure' type='quantitative' />
      <column caption='Continents' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Total Death Count' datatype='integer' name='[total_death_count]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Vraj_/AppData/Local/Temp/TableauTemp/#TableauTemp_14kuorc19to7f61610tuz02qg0p2.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/11/2024 05:06:23 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8A901CADB0AC4413B19D98EF4B794BC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_death_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_death_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_death_count</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8A901CADB0AC4413B19D98EF4B794BC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_8A901CADB0AC4413B19D98EF4B794BC2'>
            <properties context=''>
              <relation connection='excel-direct.1x545481tu84wm1csu91z1q0lk15' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='total_death_count' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau_Percent_Infected)' inline='true' name='federated.1mre52r0gaxchl1e2xsxu01m4kpi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_Percent_Infected' name='excel-direct.1d488jm0apwi6j1fzzafj05fxu1e'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Vraj_/Downloads/Tableau_Percent_Infected.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1d488jm0apwi6j1fzzafj05fxu1e' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D211:no:A1:D211:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='highest_infection_count' ordinal='2' />
            <column datatype='real' name='percent_population_infected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1d488jm0apwi6j1fzzafj05fxu1e' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D211:no:A1:D211:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='highest_infection_count' ordinal='2' />
            <column datatype='real' name='percent_population_infected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D211:no:A1:D211:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_EB1FB887B4AD4ED5B61C5BD8A4F46D37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_EB1FB887B4AD4ED5B61C5BD8A4F46D37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_infection_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[highest_infection_count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>highest_infection_count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_EB1FB887B4AD4ED5B61C5BD8A4F46D37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_population_infected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percent_population_infected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>percent_population_infected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_EB1FB887B4AD4ED5B61C5BD8A4F46D37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_EB1FB887B4AD4ED5B61C5BD8A4F46D37]' role='measure' type='quantitative' />
      <column caption='Highest Infection Count' datatype='integer' name='[highest_infection_count]' role='measure' type='quantitative' />
      <column caption='Percent Population Infected' datatype='real' name='[percent_population_infected]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Vraj_/AppData/Local/Temp/TableauTemp/#TableauTemp_0314i781oqes4z11hzicb1i0r3pp.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/11/2024 05:37:58 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_EB1FB887B4AD4ED5B61C5BD8A4F46D37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_EB1FB887B4AD4ED5B61C5BD8A4F46D37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>highest_infection_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[highest_infection_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>highest_infection_count</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>190</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_EB1FB887B4AD4ED5B61C5BD8A4F46D37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>percent_population_infected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[percent_population_infected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>percent_population_infected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>191</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_EB1FB887B4AD4ED5B61C5BD8A4F46D37]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_EB1FB887B4AD4ED5B61C5BD8A4F46D37'>
            <properties context=''>
              <relation connection='excel-direct.1d488jm0apwi6j1fzzafj05fxu1e' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D211:no:A1:D211:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='highest_infection_count' ordinal='2' />
                  <column datatype='real' name='percent_population_infected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau_Percent_Infected_Time)' inline='true' name='federated.1pmxscx1rr6z4v1begx74159rlkl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_Percent_Infected_Time' name='excel-direct.0ftbdpl1y6arqk10713hl1hcg6z6'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Vraj_/Downloads/Tableau_Percent_Infected_Time.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0ftbdpl1y6arqk10713hl1hcg6z6' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='highest_infection_count' ordinal='3' />
            <column datatype='real' name='percent_population_infected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0ftbdpl1y6arqk10713hl1hcg6z6' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='highest_infection_count' ordinal='3' />
            <column datatype='real' name='percent_population_infected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_743F0C85101D4E52B7653DD9640007DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_743F0C85101D4E52B7653DD9640007DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_743F0C85101D4E52B7653DD9640007DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_infection_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[highest_infection_count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>highest_infection_count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_743F0C85101D4E52B7653DD9640007DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_population_infected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percent_population_infected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>percent_population_infected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_743F0C85101D4E52B7653DD9640007DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_743F0C85101D4E52B7653DD9640007DF]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Highest Infection Count' datatype='integer' name='[highest_infection_count]' role='measure' type='quantitative' />
      <column caption='Percent Population Infected' datatype='real' name='[percent_population_infected]' role='measure' type='quantitative' />
      <column-instance column='[Location]' derivation='Attribute' name='[attr:Location:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Vraj_/AppData/Local/Temp/TableauTemp/#TableauTemp_1xnl0k30ky4ak01fx7u850qyf3ox.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/11/2024 09:56:15 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>296</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_743F0C85101D4E52B7653DD9640007DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>296</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_743F0C85101D4E52B7653DD9640007DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1286</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_743F0C85101D4E52B7653DD9640007DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>highest_infection_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[highest_infection_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>highest_infection_count</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16875</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_743F0C85101D4E52B7653DD9640007DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>percent_population_infected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[percent_population_infected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>percent_population_infected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30302</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_743F0C85101D4E52B7653DD9640007DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' palette='jewel_bright_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Location:nk]' palette='jewel_bright_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_743F0C85101D4E52B7653DD9640007DF'>
            <properties context=''>
              <relation connection='excel-direct.0ftbdpl1y6arqk10713hl1hcg6z6' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='highest_infection_count' ordinal='3' />
                  <column datatype='real' name='percent_population_infected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>GLobal Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_Total_Table)' name='federated.1d75m9w13x97xm1g61rdm1m9xom1' />
          </datasources>
          <datasource-dependencies datasource='federated.1d75m9w13x97xm1g61rdm1m9xom1'>
            <column caption='Death Percentage' datatype='real' name='[death_percentage]' role='measure' type='quantitative' />
            <column-instance column='[death_percentage]' derivation='Sum' name='[sum:death_percentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1d75m9w13x97xm1g61rdm1m9xom1].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1d75m9w13x97xm1g61rdm1m9xom1].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1d75m9w13x97xm1g61rdm1m9xom1].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1d75m9w13x97xm1g61rdm1m9xom1].[sum:death_percentage:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1d75m9w13x97xm1g61rdm1m9xom1].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1d75m9w13x97xm1g61rdm1m9xom1].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1d75m9w13x97xm1g61rdm1m9xom1].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1d75m9w13x97xm1g61rdm1m9xom1].[sum:death_percentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1d75m9w13x97xm1g61rdm1m9xom1].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1d75m9w13x97xm1g61rdm1m9xom1].[:Measure Names]' value='167' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.1d75m9w13x97xm1g61rdm1m9xom1].[Multiple Values]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1d75m9w13x97xm1g61rdm1m9xom1].[sum:death_percentage:qk]' value='n#,##0.000;-#,##0.000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#ddebf0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#efebe8' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1d75m9w13x97xm1g61rdm1m9xom1].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1d75m9w13x97xm1g61rdm1m9xom1].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{B05FFBEB-8A3D-4528-84A9-324E2663C7EC}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Death Count By Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_TotalDeath_Continent)' name='federated.0rg3pqy08l6yp51bo2mja1t13qid' />
          </datasources>
          <datasource-dependencies datasource='federated.0rg3pqy08l6yp51bo2mja1t13qid'>
            <column caption='Continents' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_death_count]' derivation='Sum' name='[sum:total_death_count:qk]' pivot='key' type='quantitative' />
            <column caption='Total Death Count' datatype='integer' name='[total_death_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0rg3pqy08l6yp51bo2mja1t13qid].[none:location:nk]' direction='DESC' using='[federated.0rg3pqy08l6yp51bo2mja1t13qid].[sum:total_death_count:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0rg3pqy08l6yp51bo2mja1t13qid].[sum:total_death_count:qk]' value='93' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0rg3pqy08l6yp51bo2mja1t13qid].[none:location:nk]' value='118' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0rg3pqy08l6yp51bo2mja1t13qid].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rg3pqy08l6yp51bo2mja1t13qid].[sum:total_death_count:qk]</rows>
        <cols>[federated.0rg3pqy08l6yp51bo2mja1t13qid].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{6045209A-430D-4984-8900-AF058CD1C58E}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent of Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_Percent_Infected)' name='federated.1mre52r0gaxchl1e2xsxu01m4kpi' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1mre52r0gaxchl1e2xsxu01m4kpi'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[percent_population_infected]' role='measure' type='quantitative' />
            <column-instance column='[percent_population_infected]' derivation='Sum' name='[sum:percent_population_infected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1mre52r0gaxchl1e2xsxu01m4kpi].[Longitude (generated)]' field-type='quantitative' max='15564479.264675204' min='-15180130.118869863' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1mre52r0gaxchl1e2xsxu01m4kpi].[Latitude (generated)]' field-type='quantitative' max='11902825.931196973' min='-3207451.0895823753' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1mre52r0gaxchl1e2xsxu01m4kpi].[none:Location:nk]' value='#e15759' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1mre52r0gaxchl1e2xsxu01m4kpi].[sum:percent_population_infected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1mre52r0gaxchl1e2xsxu01m4kpi].[sum:percent_population_infected:qk]' value='Percent of Population Infected'>
              <formatted-text>
                <run>Percent of Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1mre52r0gaxchl1e2xsxu01m4kpi].[none:Location:nk]' />
              <color column='[federated.1mre52r0gaxchl1e2xsxu01m4kpi].[sum:percent_population_infected:qk]' />
              <geometry column='[federated.1mre52r0gaxchl1e2xsxu01m4kpi].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#499894' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mre52r0gaxchl1e2xsxu01m4kpi].[Latitude (generated)]</rows>
        <cols>[federated.1mre52r0gaxchl1e2xsxu01m4kpi].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{7AF6445F-777B-48DB-9ED4-0ADEC8060929}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Overtime</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_Percent_Infected_Time)' name='federated.1pmxscx1rr6z4v1begx74159rlkl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pmxscx1rr6z4v1begx74159rlkl'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column-instance column='[percent_population_infected]' derivation='Avg' name='[avg:percent_population_infected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[percent_population_infected]' derivation='Avg' forecast-column-base='[avg:percent_population_infected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:percent_population_infected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[percent_population_infected]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pmxscx1rr6z4v1begx74159rlkl].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Hong Kong&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Vietnam&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pmxscx1rr6z4v1begx74159rlkl].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1pmxscx1rr6z4v1begx74159rlkl].[tmn:date:qk]' value='81' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' field='[federated.1pmxscx1rr6z4v1begx74159rlkl].[none:Location:nk]' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1pmxscx1rr6z4v1begx74159rlkl].[none:Location:nk]' />
              <text column='[federated.1pmxscx1rr6z4v1begx74159rlkl].[none:Location:nk]' />
              <color column='[federated.1pmxscx1rr6z4v1begx74159rlkl].[none:Forecast Indicator:nk]' />
              <lod column='[federated.1pmxscx1rr6z4v1begx74159rlkl].[fVal:avg:percent_population_infected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pmxscx1rr6z4v1begx74159rlkl].[fVal:avg:percent_population_infected:qk]</rows>
        <cols>[federated.1pmxscx1rr6z4v1begx74159rlkl].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{D08D7DE5-C2B5-4613-BD76-43D4F3E4600E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98060' id='15' param='horz' type-v2='layout-flow' w='98858' x='571' y='970'>
            <zone h='98060' id='9' param='horz' type-v2='layout-flow' w='98858' x='571' y='970'>
              <zone h='98060' id='7' type-v2='layout-basic' w='98858' x='571' y='970'>
                <zone h='12848' id='3' name='Sheet 1' w='49429' x='571' y='970'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='36121' id='5' name='Sheet 2' w='49428' x='571' y='13818'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49091' id='11' name='Sheet 4' w='85933' x='571' y='49939'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49091' id='12' name='Sheet 4' pane-specification-id='1' param='[federated.1pmxscx1rr6z4v1begx74159rlkl].[none:Location:nk]&#10;[federated.1pmxscx1rr6z4v1begx74159rlkl].[none:Forecast Indicator:nk]' type-v2='color' w='12925' x='86504' y='49939'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='36121' id='13' name='Sheet 3' w='49430' x='49999' y='13818'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='12848' id='16' name='Sheet 3' pane-specification-id='2' param='[federated.1mre52r0gaxchl1e2xsxu01m4kpi].[sum:percent_population_infected:qk]' type-v2='color' w='49429' x='50000' y='970'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98060' id='17' param='vert' type-v2='layout-flow' w='98858' x='571' y='970'>
                <zone fixed-size='95' h='12848' id='3' is-fixed='true' name='Sheet 1' w='49429' x='571' y='970'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36121' id='5' is-fixed='true' name='Sheet 2' w='49428' x='571' y='13818'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36121' id='13' is-fixed='true' name='Sheet 3' w='49430' x='49999' y='13818'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12848' id='16' name='Sheet 3' pane-specification-id='2' param='[federated.1mre52r0gaxchl1e2xsxu01m4kpi].[sum:percent_population_infected:qk]' type-v2='color' w='49429' x='50000' y='970'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49091' id='11' is-fixed='true' name='Sheet 4' w='85933' x='571' y='49939'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49091' id='12' name='Sheet 4' pane-specification-id='1' param='[federated.1pmxscx1rr6z4v1begx74159rlkl].[none:Location:nk]&#10;[federated.1pmxscx1rr6z4v1begx74159rlkl].[none:Forecast Indicator:nk]' type-v2='color' w='12925' x='86504' y='49939'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C2562AA4-88C6-4700-A52C-8F1F1D4F9939}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1d75m9w13x97xm1g61rdm1m9xom1].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5CA6BE24-0B52-44C3-8313-039DF6B69D09}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rg3pqy08l6yp51bo2mja1t13qid].[none:location:nk]</field>
            <field>[federated.1mre52r0gaxchl1e2xsxu01m4kpi].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A8120E8A-3F62-4980-A5A4-5417319C3C3D}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='230'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1mre52r0gaxchl1e2xsxu01m4kpi].[sum:percent_population_infected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mre52r0gaxchl1e2xsxu01m4kpi].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{FE9A5B88-E572-4252-9203-FCF3C25944CF}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1pmxscx1rr6z4v1begx74159rlkl].[none:Location:nk]&#10;[federated.1pmxscx1rr6z4v1begx74159rlkl].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pmxscx1rr6z4v1begx74159rlkl].[none:Forecast Indicator:nk]</field>
            <field>[federated.1pmxscx1rr6z4v1begx74159rlkl].[none:Location:nk]</field>
            <field>[federated.1pmxscx1rr6z4v1begx74159rlkl].[tmn:date:qk]</field>
            <field>[federated.1pmxscx1rr6z4v1begx74159rlkl].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5BBDCA63-2F52-4690-821E-7391446A3A87}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1pmxscx1rr6z4v1begx74159rlkl].[none:Forecast Indicator:nk]</field>
              <field>[federated.1pmxscx1rr6z4v1begx74159rlkl].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='13' />
      <simple-id uuid='{F9AAA207-93FB-4FD0-A9F4-615F6C24035A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='45' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAAtCAYAAAD4BmRbAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAKY0lEQVR4nO2ce1TVVRbHP42M5ICjYFevhsjDN8tXWuJV8ZmKkJkSiuSLlESzQgZHSstX
      khLjM0GGAEXAdTUznxSSpUmQNigsQZCHogaKI9cEFfyxnD9Ahet9OV7Euuez1m8tOGfvs/e9
      63x/Z5/f4z537969ewgEJspfGjsBgaAxEQIQmDRCAAKTRghAYNIIAQhMGiEAgUkjBCAwacz0
      GRRcu/E08hAIGgWxAghMGiEAgUkjBCAwaYQABCaN3k2wwDj8pnyHD6LytPR2ZErkFsbbNHAS
      l3awcNa/sV2azLvOWmyqy8g+EE5c/E/kqu5gZtmebqN8meuroFUDp9cYCAE8Jdp5bkHpWfN3
      jRjsWZi4iH6PPVIKm8YsocgnhjWe7Y2c5UW+/9ifyKLezA7ZxbL2zeB2EWnhP1CEEIDgT055
      cgSRv7bCM3Ixw+6vRs1sUfhPa9S8GhIhgGeMalUm+zaE8s0vF6mQnqdNnzd5+59T6d2yCaR+
      hufSpBrDqBl4RsHD8ukW+QfWE52QSsG1ciTMsLDpz+sBgYzv1tyAyNf5+bsUJOcgRmstxQyI
      cfMMe9aG1OZvhoVNT4bN+Afeg9rQBKD6CmlfrCTy+yxu3Pk//I2M2AQ/S1SfZqvfBxx8bjLB
      u5NR7t2KV6v9rPJbS/otwHkRysQVuAB2PjEoE5NRJt7fO9zgqsqeN1ZsZ2tiMsq9cczumkX8
      x1FkVhsS/Cw5p8GuexeaabXRH+PM9o+IvzKMxTu/Q5m4j00fuXEnJYUrANwifcM8tlwewqKE
      mv7gCffYG7iMpFJD/I2PEMAzhCoxlsSbg5keMAZ5U6DpCyj8F+By8xB7j1zX492WAd6T6Wvf
      nL9S6zvOFdnNLPKLjZWh/hi3K26CdRvaNGsCNMXCfii+C9+gHcD1ZPZ+2wL3uR441vbLx77F
      yFbppPxyXb9/AyBKoGeIwtxM6DAT+7/VaWzSHpsOcDT7LLgpdPqXZ+8hOmIH/zlXSoV0v7Wj
      UXPUF8NpiDutloXgNzOZwa7uDBs+gE4vNK3pzM8hh/OceWcEO9TGtauoAKx1+zcAQgB/Fkr3
      ERoYRuXEzwhd3QfrptRe9jxi4ABd6dILjmblcJv2mssgA2I0e9mfTTunUHDiCEcORbI8ahWW
      oz8hxF+BZbWEhB2Tt3zJhA6as9Dp/3jfiEGIEugZwr5zD7hwlsJbdRpv5ZF/AZy6ddXtnH+G
      M5ILr0+rnZiPjTUvufTBLHUn3156shhNmrWhk8tkfINjCVvsQuW3cfxQDHRwpCPnOXW6VGcm
      Wv0bACGAZ4iWY6YypvkxtoYmUlIFVF0jZfMXpDV3Zdww61qrmjP1peNHOV8FVFdxtxqQyWnL
      CVKPl1FNFRWFPxCxOgFtc1kTrdzeZ6rTJZRBKzly8TbVwN3yAlLWbiMdQ2Jc5NCaYA6dusKd
      aoAqqqoAmmFuDrQdwxhnM85GLCX+1DXuAlTdpCgthrikYv3+DYAogZ4lmvRietg6rDeEEjQh
      5MFl0A/DptL7wb7AmuELllK48nM+HBeF9HxvZoWFMspxIvO8Mwle44HXGkscXGbiM9eLPH9D
      SyCA9riu2Y7dV2v5MtCDsLp3ggH0xmhHv+H27Ng6j/jsMioB85bdGbx4McOtAZrjsmQb5l+s
      JHLpJPbcATNLGQ6vjMdjemsAPf7G5zl9vwsk3gcQ/JkRJZDApBECEJg0QgACk0bvJvj6+XNP
      Iw+BoFHQuwlWXWuopzAEgifDSianrLTkicYQJZDApBECEJg0QgACk0YIwMhUXjhI0OjOjAov
      1NCbjL9MjpX6EZBcz0qVHsGsQZ2xksmxG+RHWLr+m5EF4e6PjitzJ6ygpj8pQEPc2kNzrhKp
      y/phJZPjn6yhu57pf/kl3A+X7vZYyezpPMyPmOzKOslFMEpLbCtZIEmG2jQA4lEIY1F5gf3L
      /VhwuB2v92yt2aYgnzMj15Kb4IVM2zgFUXh7HGLMnnTCe5hTmRmB5/gZmCV9zWwH7eHzzxXx
      3v4SlvXX3P9qaAlloeqtxcR5TeeS4tF3i6WM9QT9OpdV0z4kV3tYQCL109H4lgSx+8RGOlpU
      U5K8mknuk7l7P2cHX74r9X3UM205zpG9eBkDbRoAsQIYiYIdGziu2Ej68Uj8+rbUbFR4jqKu
      jtonPxLHozfTJjSG+T0sMMMMix5ziQttzcboFCStfoXkZfWksw6BaCRbSSQzmdZT7TwoZRK6
      4CemrPPR/zZB6U7WJnoQs3EiHS3MAHPkIz4mOvAuoTpzruBgzCHcZrmh5dsy0ObJEAIwEg7T
      Qwl2c8RCx5pacC4bRS8nHaNk89Phvrw2skW91pYjx9Lv8M9kaR+ZXFUfemhXlgYq2LshFsX8
      N2lbr10iY20AR73+pXPFecC1q1xSvMxLap/bYdQ4bHXlnB3J6tK5zOmv4wszxOYJEQJ4ihSd
      P8PXsx1r61p7Or/iQdCuHFQPLK5S8vuLtFV/88OyLe1/L9H+XmzRBXLzQhhyv2Z27MuId9bz
      42Xt518K4thU+j7vKupPLulcBEHHJrPxbXvDPpRFc1pm5VOg3u7giFOetpwrSIr8mqELvNTE
      97g2T44QwFNk6GeFlJWW1B5nORHrg7T5NbzD8x6WCrZyHt1ByJDb6hjY1ocDD8YtoTRjHyv6
      pDPfPYgklSYHiePREdjNmFB/ckl5hAUkMX6dDwZXU7auTGn5OfNDUimp3fdW3sjh59hE0rT5
      FO8m7OQbeCt0nNkNsTECYhPcaJjTostYQr43x1+2hSNzQniV1shVSk6Xg0PdVaA8gxMqOQMN
      HNnMoh2KOTHswZ05Owp5dU7ds7lE6rLBfNk3mSh3izrtPxLoMInI20B/OQvrDrhNTgz9WJW2
      H79HlNEW74RcvOt+shZdGDCwE5YDzOiibl6cwKSpV1maHEB3bR/AEBsjIVaAp8YNVJrOxsW/
      caF1c2p+Facbg0b+yr7D9S97qg4f5OTIAVonQ7nqhobNpkTx5SKs/q5WT6kOEHHQFV/3Fmr2
      QwgpKqmzQtUcymkwY0cJZaWaJr82JDK+SsDSwxVb9fbt0eAzBfV99+PZGA8hgKfGKT5VjCVo
      VwaXKyRAoiL/IIHeK6hcMJWan+o0Y+DMuVwJmMHGzAokJCoyN+MdcJX5MxVal+vrX83G2Wc9
      yTm/UwlQeYWU8Fn47XfDb1z9nXFWzDpU82bjbMTJdVL5aGyfY16snqJWvZcnsil+AO956qjq
      DbExIkIARqGQMNeHN276LjnJiSUDHvxfcyNpCMHHltPl+HJG97TBSmaD08Qoqvz2srvuhtPB
      h7hdrpz264NMZoOTXybuu2LqXZGRUj6ha59gTtb+b/t2LLsm3iJyzkDsZXKsOo1k0bHebDi8
      gqF1FwDVN3y+1YUA9Yn5WBQT42HPW8qHL7a/aAMJdWKvyBlBxDZfOtUTmURGWCjX/OcwUNfZ
      X6+NcRFPg/7hKCbOawK5HxxjWQNeHtSGlLYc53Wd2JfQsFdnDMEYT4OKTfAfDCkjnh8HxbK5
      ESY/3GCf8iYrwhp/8huL/wGVBGMq0WvGEQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
